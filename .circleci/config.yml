version: 2.1
jobs:
  build:
    docker:
      - image: fpco/stack-build:lts
    steps:
      - run:
          name: Update and Install SSH
          command: apt-get update && apt-get install --yes ssh
      - add_ssh_keys:
          fingerprints:
            - "97:ad:3f:6c:59:f6:d8:66:3c:f6:e5:74:ef:b5:c5:ab"
      - run:
          name: Establishing authenticity of Github
          command: echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - checkout
      - restore_cache:
          name: Restore Cached Dependencies
          keys:
            # find a cache for the same stack.yaml
            - stack-{{ .Branch }}-{{ checksum "stack.yaml" }}
            # when missing reuse from the same branch
            - stack-{{ .Branch }}-
            # when missing reuse the latest cache
            - stack-
      - run:
          name: Resolve and Update Dependencies
          command: stack --no-terminal setup
      - save_cache:
          name: Cache Dependencies
          key: stack-{{ .Branch }}-{{ checksum "stack.yaml" }}
          paths:
            - ~/.stack
            - ./.stack-work
      - run:
          name: Build Site App
          command: stack build --pedantic
      - run:
          name: Generate Static Site
          command: stack exec vincibean build
      - run:
          name: Publish GitHub Pages
          working_directory: './_site'
          command: |
            # initalize repo
            git init
            git config user.name  'CircleCI'
            git config user.email 'job@circleci.com'
            # add generated files
            git add .
            git commit -m "publish $CIRCLE_SHA1 [ci skip]"
            # push to pages branch
            git remote add origin "$CIRCLE_REPOSITORY_URL"
            git push --force origin master


version: 2.1
jobs:
  build:
    docker:
      - image: fpco/stack-build:lts
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      - restore_cache:
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          name: Restore Cached Dependencies
          keys:
            - cci-demo-haskell-v1-{{ checksum "stack.yaml" }}-{{ checksum "package.yaml" }}
            - cci-demo-haskell-v1-{{ checksum "stack.yaml" }}
      - run:
          name: Resolve/Update Dependencies
          command: stack --no-terminal setup
      - run:
          name: Run tests
          command: stack --no-terminal test
      - run:
          name: Install executable
          command: stack --no-terminal install
      - save_cache:
          name: Cache Dependencies
          key: cci-demo-haskell-v1-{{ checksum "stack.yaml" }}-{{ checksum "package.yaml" }}
          paths:
            - "/root/.stack"
            - ".stack-work"
      - store_artifacts:
          # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: ~/.local/bin/circleci-demo-haskell-exe
          destination: circleci-demo-haskell-exe

